{"version":3,"sources":["src/adapter.js"],"names":[],"mappings":";;;;;;;;;;sBAAc,QAAQ;;;;sBACH,UAAU;;;;AAEtB,IAAM,IAAI,GAAG,SAAS,CAAC;;;;AAGvB,IAAM,UAAU,GAAG,CACxB,0BAA0B,EAC1B,0BAA0B,CAC3B,CAAC;;;;AAEK,SAAS,MAAM,CAAC,MAAM,EAAE;AAC7B,SAAO,CAAC,EAAE,oBAAE,QAAQ,CAAC,MAAM,CAAC,GACxB,MAAM,CAAC,KAAK,CAAC,8BAA8B,CAAC,GAC5C,MAAM,CAAC,OAAO,KAAK,KAAK,CAAA,AAAC,CAAC;CAC/B;;;;;;AAKM,SAAS,KAAK,CAAC,OAAO,EAAE,IAAI,EAAE;AACnC,MAAM,MAAM,GAAG,wBAAW,OAAO,CAAC,CAAC;AACnC,QAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;CACpB;;qBAEc,EAAC,IAAI,EAAJ,IAAI,EAAE,UAAU,EAAV,UAAU,EAAE,MAAM,EAAN,MAAM,EAAE,KAAK,EAAL,KAAK,EAAC","file":"src/adapter.js","sourcesContent":["import _ from 'lodash';\nimport Parser from './parser';\n\nexport const name = 'swagger';\n\n// TODO: Figure out media type for Swagger 2.0\nexport const mediaTypes = [\n  'application/swagger+json',\n  'application/swagger+yaml',\n];\n\nexport function detect(source) {\n  return !!(_.isString(source)\n    ? source.match(/\"?swagger\"?:\\s*[\"']2\\.0[\"']/g)\n    : source.swagger === '2.0');\n}\n\n/*\n * Parse Swagger 2.0 into Refract elements\n */\nexport function parse(options, done) {\n  const parser = new Parser(options);\n  parser.parse(done);\n}\n\nexport default {name, mediaTypes, detect, parse};\n"]}
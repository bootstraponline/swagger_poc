{"version":3,"sources":["src/headers.js"],"names":[],"mappings":"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","file":"src/headers.js","sourcesContent":["import link from './link';\nimport annotations from './annotations';\n\nexport function createHeaders(payload, parser) {\n  const {HttpHeaders} = parser.minim.elements;\n\n  const headers = new HttpHeaders();\n\n  payload.headers = payload.headers || headers;\n}\n\nexport function pushHeader(key, value, payload, parser, fragment) {\n  const {Member: MemberElement} = parser.minim.elements;\n  let header;\n\n  createHeaders(payload, parser);\n\n  const duplicate = payload.headers.find((member) => {\n    return member.key.content.toLowerCase() === key.toLowerCase();\n  });\n\n  if (duplicate.length) {\n    header = duplicate.first();\n    header.value = value;\n  } else {\n    header = new MemberElement(key, value);\n  }\n\n  if (fragment) {\n    link.inferred(fragment, header, parser);\n  } else {\n    header._meta = parser.minim.toElement({});\n  }\n\n  if (fragment === undefined && parser.generateSourceMap) {\n    parser.createSourceMap(header, parser.path);\n  }\n\n  if (!duplicate.length) {\n    payload.headers.push(header);\n  }\n\n  return header;\n}\n\nexport function pushHeaderObject(key, header, payload, parser) {\n  let value = '';\n\n  if (header.type === 'array') {\n    parser.createAnnotation(annotations.DATA_LOST, parser.path,\n      'Headers of type array are not yet supported');\n\n    return;\n  }\n\n  // Choose the first available option\n  if (header.enum) {\n    // TODO: This may lose data if there are multiple enums.\n    value = header.enum[0];\n  }\n\n  if (header['x-example']) {\n    value = header['x-example'];\n  } else if (header.default) {\n    value = header.default;\n  }\n\n  const headerElement = pushHeader(key, value, payload, parser);\n\n  if (header.description) {\n    headerElement.description = header.description;\n\n    if (parser.generateSourceMap) {\n      parser.createSourceMap(headerElement.meta.get('description'), parser.path.concat(['description']));\n    }\n  }\n}\n\nexport default {pushHeader, pushHeaderObject};\n"]}
{"version":3,"sources":["src/adapter.js"],"names":[],"mappings":";;;;;;;;;;;;2BAEwB,aAAa;;;;uBACjB,SAAS;;;;AAEtB,IAAM,IAAI,GAAG,eAAe,CAAC;;AAC7B,IAAM,UAAU,GAAG,CACxB,uBAAuB,CACxB,CAAC;;;;AAEK,SAAS,MAAM,CAAC,MAAM,EAAE;AAC7B,SAAO,UAAU,CAAC,OAAO,CAAC,yBAAY,QAAQ,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;CAChE;;;;;;AAKM,SAAS,KAAK,CAAC,IAA2B,EAAE,IAAI,EAAE;MAAlC,MAAM,GAAP,IAA2B,CAA1B,MAAM;MAAE,iBAAiB,GAA1B,IAA2B,CAAlB,iBAAiB;;AAC9C,MAAM,OAAO,GAAG;AACd,mBAAe,EAAE,CAAC,CAAC,iBAAiB;AACpC,QAAI,EAAE,SAAS;GAChB,CAAC;;AAEF,uBAAQ,KAAK,CAAC,MAAM,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;CACtC;;qBAEc,EAAC,IAAI,EAAJ,IAAI,EAAE,UAAU,EAAV,UAAU,EAAE,MAAM,EAAN,MAAM,EAAE,KAAK,EAAL,KAAK,EAAC","file":"src/adapter.js","sourcesContent":["// API Blueprint parser for Fury.js\n\nimport deckardcain from 'deckardcain';\nimport drafter from 'drafter';\n\nexport const name = 'api-blueprint';\nexport const mediaTypes = [\n  'text/vnd.apiblueprint',\n];\n\nexport function detect(source) {\n  return mediaTypes.indexOf(deckardcain.identify(source)) !== -1;\n}\n\n/*\n * Parse an API Blueprint into refract elements.\n */\nexport function parse({source, generateSourceMap}, done) {\n  const options = {\n    exportSourcemap: !!generateSourceMap,\n    type: 'refract',\n  };\n\n  drafter.parse(source, options, done);\n}\n\nexport default {name, mediaTypes, detect, parse};\n"]}
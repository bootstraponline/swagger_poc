{"version":3,"sources":["src/elements/data-structure.js"],"names":[],"mappings":";;;;;;;;;;;;;;qBAAe,UAAS,SAAS,EAAE;MAC3B,aAAa;cAAb,aAAa;;AACN,aADP,aAAa,GACH;4BADV,aAAa;;AAEf,iCAFE,aAAa,8CAEN,SAAS,EAAE;AACpB,UAAI,CAAC,OAAO,GAAG,eAAe,CAAC;AAC/B,UAAI,IAAI,CAAC,OAAO,KAAK,SAAS,EAAE;AAC9B,YAAI,CAAC,OAAO,GAAG,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;OAClD;KACF;;iBAPG,aAAa;;aASV,mBAAG;AACR,eAAO,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;OAC/C;;;aAEQ,qBAAG;AACV,YAAM,OAAO,8BAdX,aAAa,0CAckB,CAAC;;AAElC,YAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;AAC/B,iBAAO,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAA,IAAI;mBAAI,IAAI,CAAC,SAAS,EAAE;WAAA,CAAC,CAAC;SAC9D,MAAM;AACL,iBAAO,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC;SAC5C;;AAED,eAAO,OAAO,CAAC;OAChB;;;aAEU,qBAAC,GAAG,EAAE;AACf,mCA1BE,aAAa,6CA0BG,GAAG,EAAE;;AAEvB,YAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE;AAC9B,cAAI,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,UAAA,IAAI;mBAAI,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC;WAAA,CAAC,CAAC;SACrE,MAAM;AACL,cAAI,CAAC,OAAO,GAAG,SAAS,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;SACnD;;AAED,eAAO,IAAI,CAAC;OACb;;;WAnCG,aAAa;KAAS,SAAS,CAAC,WAAW;;AAsCjD,WAAS,CAAC,QAAQ,CAAC,eAAe,EAAE,aAAa,CAAC,CAAC;CACpD","file":"src/elements/data-structure.js","sourcesContent":["export default function(namespace) {\n  class DataStructure extends namespace.BaseElement {\n    constructor() {\n      super(...arguments);\n      this.element = 'dataStructure';\n      if (this.content !== undefined) {\n        this.content = namespace.toElement(this.content);\n      }\n    }\n\n    toValue() {\n      return this.content && this.content.toValue();\n    }\n\n    toRefract() {\n      const refract = super.toRefract();\n\n      if (Array.isArray(this.content)) {\n        refract.content = this.content.map(item => item.toRefract());\n      } else {\n        refract.content = this.content.toRefract();\n      }\n\n      return refract;\n    }\n\n    fromRefract(doc) {\n      super.fromRefract(doc);\n\n      if (Array.isArray(doc.content)) {\n        this.content = doc.content.map(item => namespace.fromRefract(item));\n      } else {\n        this.content = namespace.fromRefract(doc.content);\n      }\n\n      return this;\n    }\n  }\n\n  namespace.register('dataStructure', DataStructure);\n}\n"]}
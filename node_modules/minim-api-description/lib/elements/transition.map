{"version":3,"sources":["src/elements/transition.js"],"names":[],"mappings":";;;;;;;;;;;;;;qBAAe,UAAS,SAAS,EAAE;AACjC,MAAM,YAAY,GAAG,SAAS,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;;MAElD,UAAU;cAAV,UAAU;;AACH,aADP,UAAU,GACA;4BADV,UAAU;;AAEZ,iCAFE,UAAU,8CAEH,SAAS,EAAE;;AAEpB,UAAI,CAAC,OAAO,GAAG,YAAY,CAAC;AAC5B,UAAI,CAAC,qBAAqB,GAAG,CAAC,eAAe,EAAE,MAAM,CAAC,CAAC;KACxD;;iBANG,UAAU;;WAQJ,eAAG;AACX,YAAM,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;AAC9C,YAAI,WAAW,EAAE;AACf,cAAM,OAAO,GAAG,WAAW,CAAC,OAAO,CAAC;AACpC,cAAI,OAAO,EAAE;AACX,mBAAO,OAAO,CAAC,MAAM,CAAC;WACvB;SACF;OACF;;;WAEW,eAAG;AACb,eAAO,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;OAC7C;WAEW,aAAC,KAAK,EAAE;AAClB,YAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;OACxC;;;WAEO,eAAG;AACT,eAAO,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;OACzC;WAEO,aAAC,KAAK,EAAE;AACd,YAAI,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;OACpC;;;WAEe,eAAG;AACjB,YAAI;AACF,iBAAO,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC;SACtE,CAAC,OAAO,GAAG,EAAE;AACZ,iBAAO,IAAI,CAAC;SACb;OACF;;;WAEgB,eAAG;AAClB,eAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;OAC7C;WAEgB,aAAC,KAAK,EAAE;AACvB,YAAI,CAAC,UAAU,CAAC,GAAG,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC;OAC7C;;;WAEO,eAAG;AACT,eAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;OACpC;WAEO,aAAC,KAAK,EAAE;AACd,YAAI,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;OACpC;;;WAEe,eAAG;AACjB,eAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;OAC5C;WAEe,aAAC,KAAK,EAAE;AACtB,YAAI,CAAC,UAAU,CAAC,GAAG,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;OAC5C;;;WAEe,eAAG;AACjB,eAAO,IAAI,CAAC,QAAQ,CAAC,UAAC,IAAI;iBAAK,IAAI,CAAC,OAAO,KAAK,iBAAiB;SAAA,CAAC,CAAC;OACpE;;;WApEG,UAAU;KAAS,YAAY;;AAuErC,WAAS,CAAC,QAAQ,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;CAC9C","file":"src/elements/transition.js","sourcesContent":["export default function(namespace) {\n  const ArrayElement = namespace.getElementClass('array');\n\n  class Transition extends ArrayElement {\n    constructor() {\n      super(...arguments);\n\n      this.element = 'transition';\n      this._attributeElementKeys = ['hrefVariables', 'data'];\n    }\n\n    get method() {\n      const transaction = this.transactions.first();\n      if (transaction) {\n        const request = transaction.request;\n        if (request) {\n          return request.method;\n        }\n      }\n    }\n\n    get relation() {\n      return this.attributes.getValue('relation');\n    }\n\n    set relation(value) {\n      this.attributes.set('relation', value);\n    }\n\n    get href() {\n      return this.attributes.getValue('href');\n    }\n\n    set href(value) {\n      this.attributes.set('href', value);\n    }\n\n    get computedHref() {\n      try {\n        return this.href ? this.href : this.transactions.get(0).request.href;\n      } catch (err) {\n        return null;\n      }\n    }\n\n    get hrefVariables() {\n      return this.attributes.get('hrefVariables');\n    }\n\n    set hrefVariables(value) {\n      this.attributes.set('hrefVariables', value);\n    }\n\n    get data() {\n      return this.attributes.get('data');\n    }\n\n    set data(value) {\n      this.attributes.set('data', value);\n    }\n\n    get contentTypes() {\n      return this.attributes.get('contentTypes');\n    }\n\n    set contentTypes(value) {\n      this.attributes.set('contentTypes', value);\n    }\n\n    get transactions() {\n      return this.children((item) => item.element === 'httpTransaction');\n    }\n  }\n\n  namespace.register('transition', Transition);\n}\n"]}
{"version":3,"sources":["src/parse-result.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;mCAS2B,uBAAuB;;;;AAE3C,SAAS,SAAS,CAAC,OAAO,EAAE;AACjC,MAAM,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC;AAC3B,MAAM,YAAY,GAAG,KAAK,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;AACpD,MAAM,aAAa,GAAG,KAAK,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;;MAEhD,WAAW;cAAX,WAAW;;AACJ,aADP,WAAW,GACD;4BADV,WAAW;;AAEb,iCAFE,WAAW,8CAEJ,SAAS,EAAE;AACpB,UAAI,CAAC,OAAO,GAAG,aAAa,CAAC;KAC9B;;iBAJG,WAAW;;WAMR,eAAG;AACR,eAAO,IAAI,CAAC,QAAQ,CAAC,UAAA,IAAI;iBAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC;SAAA,CAAC,CAAC,KAAK,EAAE,CAAC;OACpE;;;WAEc,eAAG;AAChB,eAAO,IAAI,CAAC,QAAQ,CAAC,UAAA,IAAI;iBAAI,IAAI,CAAC,OAAO,KAAK,YAAY;SAAA,CAAC,CAAC;OAC7D;;;WAEW,eAAG;AACb,eAAO,IAAI,CAAC,QAAQ,CAClB,UAAA,IAAI;iBAAI,IAAI,CAAC,OAAO,KAAK,YAAY,IACrC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC;SAAA,CAAC,CAAC;OACrC;;;WAES,eAAG;AACX,eAAO,IAAI,CAAC,QAAQ,CAClB,UAAA,IAAI;iBAAI,IAAI,CAAC,OAAO,KAAK,YAAY,IACrC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC;SAAA,CAAC,CAAC;OACnC;;;WAxBG,WAAW;KAAS,YAAY;;MA2BhC,UAAU;cAAV,UAAU;;AACH,aADP,UAAU,GACA;4BADV,UAAU;;AAEZ,iCAFE,UAAU,8CAEH,SAAS,EAAE;AACpB,UAAI,CAAC,OAAO,GAAG,YAAY,CAAC;KAC7B;;iBAJG,UAAU;;WAMN,eAAG;AACT,eAAO,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;OACzC;WAEO,aAAC,KAAK,EAAE;AACd,YAAI,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;OACpC;;;WAZG,UAAU;KAAS,aAAa;;MAehC,SAAS;cAAT,SAAS;;AACF,aADP,SAAS,GACC;4BADV,SAAS;;AAEX,iCAFE,SAAS,8CAEF,SAAS,EAAE;AACpB,UAAI,CAAC,OAAO,GAAG,WAAW,CAAC;KAC5B;;WAJG,SAAS;KAAS,KAAK,CAAC,WAAW;;AAOzC,OAAK,CACF,GAAG,kCAAgB,CACnB,QAAQ,CAAC,aAAa,EAAE,WAAW,CAAC,CACpC,QAAQ,CAAC,YAAY,EAAE,UAAU,CAAC,CAClC,QAAQ,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;CACrC;;qBAEc,EAAC,SAAS,EAAT,SAAS,EAAC","file":"src/parse-result.js","sourcesContent":["/*\n * Parse result-specific refract elements.\n *\n * General structure:\n *\n * + ParseResult\n *   + Annotation\n */\n\nimport apiDescription from 'minim-api-description';\n\nexport function namespace(options) {\n  const minim = options.base;\n  const ArrayElement = minim.getElementClass('array');\n  const StringElement = minim.getElementClass('string');\n\n  class ParseResult extends ArrayElement {\n    constructor() {\n      super(...arguments);\n      this.element = 'parseResult';\n    }\n\n    get api() {\n      return this.children(item => item.classes.contains('api')).first();\n    }\n\n    get annotations() {\n      return this.children(item => item.element === 'annotation');\n    }\n\n    get warnings() {\n      return this.children(\n        item => item.element === 'annotation' &&\n        item.classes.contains('warning'));\n    }\n\n    get errors() {\n      return this.children(\n        item => item.element === 'annotation' &&\n        item.classes.contains('error'));\n    }\n  }\n\n  class Annotation extends StringElement {\n    constructor() {\n      super(...arguments);\n      this.element = 'annotation';\n    }\n\n    get code() {\n      return this.attributes.getValue('code');\n    }\n\n    set code(value) {\n      this.attributes.set('code', value);\n    }\n  }\n\n  class SourceMap extends minim.BaseElement {\n    constructor() {\n      super(...arguments);\n      this.element = 'sourceMap';\n    }\n  }\n\n  minim\n    .use(apiDescription)\n    .register('parseResult', ParseResult)\n    .register('annotation', Annotation)\n    .register('sourceMap', SourceMap);\n}\n\nexport default {namespace};\n"]}